<%
// =================================================================
// REVIEW FORM COMPONENT
// =================================================================
// Props:
// - targetType: 'attraction', 'accommodation', 'food', 'entertainment', 'tour'
// - targetId: ID c·ªßa ƒë·ªëi t∆∞·ª£ng
// - user: User object
// =================================================================

const _targetType = targetType || 'attraction';
const _targetId = targetId || '';
const _user = user || null;
%>

<div class="review-form-wrapper" id="reviewFormWrapper">
  <div class="review-form-header">
    <h3 class="form-title" style="color: #fff;">G·ª≠i b√¨nh lu·∫≠n</h3>
    <!-- Rating stars trong header, cƒÉn gi·ªØa -->
    <div class="rating-input" id="ratingInput">
      <input type="hidden" name="rating" id="ratingValue" required>
      <div class="star-buttons">
        <button type="button" class="star-btn" data-rating="1">
          <span class="star-icon">‚òÖ</span>
        </button>
        <button type="button" class="star-btn" data-rating="2">
          <span class="star-icon">‚òÖ</span>
        </button>
        <button type="button" class="star-btn" data-rating="3">
          <span class="star-icon">‚òÖ</span>
        </button>
        <button type="button" class="star-btn" data-rating="4">
          <span class="star-icon">‚òÖ</span>
        </button>
        <button type="button" class="star-btn" data-rating="5">
          <span class="star-icon">‚òÖ</span>
        </button>
      </div>
      <div class="rating-label" id="ratingLabel"></div>
    </div>
  </div>

  <form id="reviewForm" class="review-form" enctype="multipart/form-data">
    <!-- =================================================================
         CONTENT v·ªõi EMOJI + UPLOAD b√™n trong
         ================================================================= -->
    <div class="form-group">
      <div class="content-input-wrapper">
        <textarea 
          id="reviewContent" 
          name="content" 
          class="form-control"
          rows="5"
          placeholder="Chia s·∫ª tr·∫£i nghi·ªám c·ªßa b·∫°n..."
          required
          minlength="10"
        ></textarea>
        
        <!-- Toolbar v·ªõi emoji + upload -->
        <div class="content-toolbar">
          <!-- Emoji picker -->
          <div class="emoji-toolbar">
            <button type="button" class="emoji-btn" data-emoji="üòä" title="M·ªâm c∆∞·ªùi">üòä</button>
            <button type="button" class="emoji-btn" data-emoji="üòç" title="Y√™u">üòç</button>
            <button type="button" class="emoji-btn" data-emoji="üëç" title="Th√≠ch">üëç</button>
            <button type="button" class="emoji-btn" data-emoji="‚ù§Ô∏è" title="Tr√°i tim">‚ù§Ô∏è</button>
            <button type="button" class="emoji-btn" data-emoji="üî•" title="Tuy·ªát v·ªùi">üî•</button>
            <button type="button" class="emoji-btn" data-emoji="‚ú®" title="Tuy·ªát">‚ú®</button>
            <button type="button" class="emoji-btn" data-emoji="üò¢" title="Bu·ªìn">üò¢</button>
            <button type="button" class="emoji-btn" data-emoji="üéâ" title="Vui v·∫ª">üéâ</button>
            <button type="button" class="emoji-btn" data-emoji="üåü" title="Tuy·ªát v·ªùi">üåü</button>
            <button type="button" class="emoji-btn" data-emoji="üíØ" title="Ho√†n h·∫£o">üíØ</button>
            <button type="button" class="emoji-btn" data-emoji="üëå" title="OK">üëå</button>
          </div>
        </div>
        
        <!-- Upload button below emoji -->
        <div class="upload-section">
          <input 
            type="file" 
            id="reviewImages" 
            name="images" 
            accept="image/*"
            multiple
            class="file-input"
            style="display: none;"
          >
          <label for="reviewImages" class="upload-btn">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
              <circle cx="8.5" cy="8.5" r="1.5"></circle>
              <polyline points="21 15 16 10 5 21"></polyline>
            </svg>
            <span>Th√™m ·∫£nh</span>
          </label>
        </div>
        
        <!-- Image previews -->
        <div class="image-previews" id="imagePreviews"></div>
      </div>
    </div>

    <!-- Hidden title field -->
    <input type="hidden" id="reviewTitle" name="title" value="">

    <!-- =================================================================
         SUBMIT BUTTONS
         ================================================================= -->
    <div class="form-actions">
      <button type="submit" class="btn-submit" id="btnSubmit">
        <span class="btn-text">G·ª≠i b√¨nh lu·∫≠n</span>
        <span class="btn-loading" style="display: none;">
          <span class="spinner-small"></span>
          ƒêang g·ª≠i...
        </span>
      </button>
    </div>
  </form>

  <!-- =================================================================
       SUCCESS MESSAGE
       ================================================================= -->
  <div class="success-message" id="successMessage" style="display: none;">
    <div class="success-icon">‚úì</div>
    <h3>C·∫£m ∆°n b·∫°n ƒë√£ ƒë√°nh gi√°!</h3>
    <p>ƒê√°nh gi√° c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c ki·ªÉm duy·ªát v√† hi·ªÉn th·ªã s·ªõm nh·∫•t.</p>
    <button type="button" class="btn-primary" onclick="location.reload()">
      Xem ƒë√°nh gi√°
    </button>
  </div>
</div>

<!-- =================================================================
     STYLES
     ================================================================= -->
<style>
/* ==========================
   FORM WRAPPER
   ========================== */
.review-form-wrapper {
  background: #ffffff;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  padding: 24px;
  margin-bottom: 24px;
  width: 100% !important;
  max-width: 600px !important;
  margin-left: auto !important;
  margin-right: auto !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Override any parent container constraints */
.review-form-container .review-form-wrapper {
  width: 100% !important;
  max-width: 600px !important;
  margin-left: auto !important;
  margin-right: auto !important;
}

.review-form-header {
  margin-bottom: 24px;
  text-align: center;
  padding-bottom: 16px;
  border-bottom: 1px solid #f3f4f6;
}

.form-title {
  font-size: 1.125rem;
  font-weight: 700;
  color: #1a1a1a;
  margin: 0 0 16px 0;
  font-family: var(--ff-heading);
}

/* ==========================
   FORM GROUPS
   ========================== */
.form-group {
  margin-bottom: 20px;
}

.form-label {
  display: block;
  font-size: 0.8125rem;
  font-weight: 500;
  color: #374151;
  margin-bottom: 8px;
  font-family: var(--ff-primary);
}

/* Content Input Wrapper */
.content-input-wrapper {
  border: 1px solid #d1d5db;
  border-radius: 8px;
  background: #ffffff;
  transition: all 0.2s;
  overflow: hidden;
  width: 100% !important;
  display: block !important;
  margin-bottom: 16px;
}

.content-input-wrapper:focus-within {
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.form-control {
  width: 100% !important;
  padding: 16px 18px;
  border: none;
  border-radius: 0;
  font-size: 0.875rem;
  font-family: var(--ff-primary);
  background: transparent;
  resize: vertical;
  box-sizing: border-box !important;
  display: block !important;
  line-height: 1.5;
  min-height: 120px;
}

.form-control:focus {
  outline: none;
}

/* ==========================
   RATING INPUT - In Header, Centered
   ========================== */
.rating-input {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 12px;
  padding: 16px 0;
  background: #f8fafc;
  border-radius: 8px;
  border: 1px solid #e2e8f0;
}

.star-buttons {
  display: flex;
  gap: 8px;
  justify-content: center;
  margin-bottom: 8px;
  flex-wrap: wrap;
}

.star-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 4px;
  transition: all 0.2s;
  line-height: 1;
  border-radius: 4px;
}

.star-btn:hover {
  transform: scale(1.1);
  background: rgba(251, 191, 36, 0.1);
}

.star-icon {
  font-size: 2rem;
  color: #d1d5db;
  transition: color 0.2s;
  display: block;
  line-height: 1;
}

.star-btn:hover .star-icon,
.star-btn.active .star-icon {
  color: #fbbf24;
}

.rating-label {
  font-size: 0.875rem;
  color: #3b82f6;
  font-weight: 500;
  min-height: 20px;
  margin-top: 4px;
  font-family: var(--ff-primary);
}

.rating-label:empty {
  display: none;
}

/* ==========================
   CONTENT TOOLBAR - Emoji horizontal
   ========================== */
.content-toolbar {
  padding: 12px 16px;
  background: #f9fafb;
  border-top: 1px solid #e5e7eb;
  margin-top: 8px;
}

.emoji-toolbar {
  display: flex;
  gap: 6px;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.emoji-btn {
  font-size: 1.125rem;
  padding: 6px 8px;
  background: transparent;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 36px;
  height: 36px;
}

.emoji-btn:hover {
  background: #e5e7eb;
  transform: scale(1.1);
}

/* ==========================
   UPLOAD SECTION - Below emoji
   ========================== */
.upload-section {
  padding: 12px 16px 16px;
  background: #f9fafb;
  border-top: 1px solid #e5e7eb;
  text-align: center;
  margin-top: 8px;
}

.upload-btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 20px;
  background: #ffffff;
  color: #6b7280;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.8125rem;
  font-weight: 500;
  transition: all 0.2s;
  white-space: nowrap;
  font-family: var(--ff-primary);
}

.upload-btn:hover {
  background: #f3f4f6;
  color: #374151;
  border-color: #9ca3af;
  transform: translateY(-1px);
}

.upload-btn svg {
  flex-shrink: 0;
}

/* ==========================
   IMAGE PREVIEWS
   ========================== */
.image-previews {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
  padding: 16px 18px 12px;
  background: #ffffff;
  margin-top: 8px;
  border-top: 1px solid #e5e7eb;
}

.image-previews:empty {
  display: none;
}

.image-preview-item {
  position: relative;
  width: 90px;
  height: 90px;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid #e5e7eb;
  transition: all 0.2s;
}

.image-preview-item:hover {
  border-color: #3b82f6;
  transform: scale(1.02);
}

.preview-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.remove-image {
  position: absolute;
  top: 4px;
  right: 4px;
  width: 24px;
  height: 24px;
  background: rgba(239, 68, 68, 0.95);
  color: #ffffff;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
  line-height: 1;
  padding: 0;
  font-weight: bold;
}

.remove-image:hover {
  background: #dc2626;
  transform: scale(1.1);
}

/* ==========================
   FORM ACTIONS
   ========================== */
.form-actions {
  display: flex;
  gap: 12px;
  justify-content: center;
  margin-top: 24px;
  padding-top: 20px;
  border-top: 1px solid #e5e7eb;
}

.btn-submit {
  padding: 14px 36px;
  background: #3b82f6;
  color: #ffffff;
  border: none;
  border-radius: 25px;
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: relative;
  overflow: hidden;
  font-family: var(--ff-primary);
  min-width: 160px;
}

.btn-submit::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-submit:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);
  background: #2563eb;
}

.btn-submit:hover:not(:disabled)::before {
  left: 100%;
}

.btn-submit:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.spinner-small {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: #ffffff;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin-right: 8px;
}

/* ==========================
   SUCCESS MESSAGE
   ========================== */
.success-message {
  text-align: center;
  padding: 48px 24px;
}

.success-icon {
  width: 80px;
  height: 80px;
  background: #10b981;
  color: #ffffff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 3rem;
  margin: 0 auto 20px;
  animation: successPop 0.5s ease;
}

@keyframes successPop {
  0% { transform: scale(0); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.success-message h3 {
  font-size: 1.5rem;
  color: #111827;
  margin-bottom: 8px;
}

.success-message p {
  font-size: 0.9375rem;
  color: #6b7280;
  margin-bottom: 24px;
}

/* ==========================
   RESPONSIVE
   ========================== */
@media (max-width: 768px) {
  .review-form-wrapper {
    padding: 20px 16px;
    margin: 20px 16px;
    max-width: none;
  }

  .form-title {
    font-size: 1.25rem;
  }

  .rating-input {
    padding: 12px 0;
    margin-top: 8px;
  }

  .star-icon {
    font-size: 1.75rem;
  }
  
  .star-buttons {
    gap: 6px;
  }
  
  .emoji-toolbar {
    gap: 4px;
  }
  
  .emoji-btn {
    font-size: 1rem;
    min-width: 32px;
    height: 32px;
    padding: 4px 6px;
  }
  
  .upload-section {
    padding: 10px 14px 12px;
  }

  .form-actions {
    justify-content: center;
    margin-top: 20px;
    padding-top: 16px;
  }

  .btn-submit {
    width: 100%;
    max-width: 200px;
    padding: 12px 24px;
  }

  .image-preview-item {
    width: 80px;
    height: 80px;
  }

  .image-previews {
    gap: 8px;
    padding: 12px 14px 8px;
  }
}

@media (max-width: 480px) {
  .review-form-wrapper {
    padding: 16px 12px;
    margin: 16px 12px;
  }

  .form-title {
    font-size: 1.125rem;
  }

  .star-buttons {
    gap: 4px;
  }

  .star-icon {
    font-size: 1.5rem;
  }

  .emoji-btn {
    min-width: 28px;
    height: 28px;
    font-size: 0.9rem;
  }

  .form-control {
    padding: 12px 14px;
    min-height: 100px;
  }

  .image-preview-item {
    width: 70px;
    height: 70px;
  }
}
</style>

<!-- =================================================================
     SCRIPT
     ================================================================= -->
<script>
(function() {
  const form = document.getElementById('reviewForm');
  const ratingInput = document.getElementById('ratingInput');
  const ratingValue = document.getElementById('ratingValue');
  const ratingLabel = document.getElementById('ratingLabel');
  const titleInput = document.getElementById('reviewTitle');
  const contentInput = document.getElementById('reviewContent');
  const imagesInput = document.getElementById('reviewImages');
  const imagePreviews = document.getElementById('imagePreviews');
  const btnSubmit = document.getElementById('btnSubmit');
  const successMessage = document.getElementById('successMessage');
  
  const targetType = '<%= _targetType %>';
  const targetId = '<%= _targetId %>';
  
  let selectedRating = 0;
  let selectedImages = [];

  const ratingLabels = {
    1: 'R·∫•t t·ªá üòû',
    2: 'T·ªá üòê',
    3: 'B√¨nh th∆∞·ªùng üôÇ',
    4: 'T·ªët üòä',
    5: 'Tuy·ªát v·ªùi üåü'
  };

  // =================================================================
  // RATING STARS
  // =================================================================
  const starButtons = ratingInput.querySelectorAll('.star-btn');
  starButtons.forEach(btn => {
    btn.addEventListener('click', function() {
      selectedRating = parseInt(this.dataset.rating);
      ratingValue.value = selectedRating;
      
      // Update UI
      starButtons.forEach((b, idx) => {
        if (idx < selectedRating) {
          b.classList.add('active');
        } else {
          b.classList.remove('active');
        }
      });
      
      ratingLabel.textContent = ratingLabels[selectedRating];
      ratingLabel.classList.add('selected');
    });

    btn.addEventListener('mouseenter', function() {
      const rating = parseInt(this.dataset.rating);
      starButtons.forEach((b, idx) => {
        if (idx < rating) {
          b.querySelector('.star-icon').style.color = '#fbbf24';
        } else {
          b.querySelector('.star-icon').style.color = '#d1d5db';
        }
      });
    });

    btn.addEventListener('mouseleave', function() {
      starButtons.forEach((b, idx) => {
        if (idx < selectedRating) {
          b.querySelector('.star-icon').style.color = '#fbbf24';
        } else {
          b.querySelector('.star-icon').style.color = '#d1d5db';
        }
      });
    });
  });

  // =================================================================
  // EMOJI PICKER
  // =================================================================
  document.querySelectorAll('.emoji-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const emoji = this.dataset.emoji;
      const cursorPos = contentInput.selectionStart;
      const textBefore = contentInput.value.substring(0, cursorPos);
      const textAfter = contentInput.value.substring(cursorPos);
      contentInput.value = textBefore + emoji + textAfter;
      contentInput.focus();
      contentInput.selectionStart = contentInput.selectionEnd = cursorPos + emoji.length;
    });
  });

  // =================================================================
  // IMAGE UPLOAD
  // =================================================================
  imagesInput.addEventListener('change', function(e) {
    const files = Array.from(e.target.files);
    
    // Limit to 5 images
    if (selectedImages.length + files.length > 5) {
      alert('B·∫°n ch·ªâ c√≥ th·ªÉ t·∫£i l√™n t·ªëi ƒëa 5 ·∫£nh');
      return;
    }

    files.forEach(file => {
      if (file.type.startsWith('image/')) {
        selectedImages.push(file);
        
        const reader = new FileReader();
        reader.onload = function(e) {
          const div = document.createElement('div');
          div.className = 'image-preview-item';
          div.innerHTML = `
            <img src="${e.target.result}" alt="Preview" class="preview-image">
            <button type="button" class="remove-image" onclick="removeImage(${selectedImages.length - 1})">√ó</button>
          `;
          imagePreviews.appendChild(div);
        };
        reader.readAsDataURL(file);
      }
    });

    // Clear input
    imagesInput.value = '';
  });

  window.removeImage = function(index) {
    selectedImages.splice(index, 1);
    renderImagePreviews();
  };

  function renderImagePreviews() {
    imagePreviews.innerHTML = '';
    selectedImages.forEach((file, index) => {
      const reader = new FileReader();
      reader.onload = function(e) {
        const div = document.createElement('div');
        div.className = 'image-preview-item';
        div.innerHTML = `
          <img src="${e.target.result}" alt="Preview" class="preview-image">
          <button type="button" class="remove-image" onclick="removeImage(${index})">√ó</button>
        `;
        imagePreviews.appendChild(div);
      };
      reader.readAsDataURL(file);
    });
  }

  // No cancel button in simple form

  // =================================================================
  // FORM SUBMIT
  // =================================================================
  form.addEventListener('submit', async function(e) {
    e.preventDefault();

    // Validation
    if (!selectedRating) {
      alert('Vui l√≤ng ch·ªçn s·ªë sao ƒë√°nh gi√°');
      return;
    }

    if (contentInput.value.length < 10) {
      alert('N·ªôi dung ƒë√°nh gi√° ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±');
      return;
    }

    // Show loading
    btnSubmit.disabled = true;
    btnSubmit.querySelector('.btn-text').style.display = 'none';
    btnSubmit.querySelector('.btn-loading').style.display = 'inline-flex';

    try {
      const formData = new FormData();
      formData.append('rating', selectedRating);
      formData.append('title', titleInput.value);
      formData.append('content', contentInput.value);
      
      // Add images
      selectedImages.forEach(file => {
        formData.append('images', file);
      });

      // Debug logging
      console.log('=== FORM DATA DEBUG ===');
      console.log('Rating:', selectedRating);
      console.log('Title:', titleInput.value);
      console.log('Content:', contentInput.value);
      console.log('Images:', selectedImages.length);
      for (let pair of formData.entries()) {
        console.log(pair[0], ':', pair[1]);
      }

      const response = await fetch(`/api/reviews/${targetType}/${targetId}`, {
        method: 'POST',
        body: formData
      });

      // Check if response is JSON
      const contentType = response.headers.get('content-type');
      if (!contentType || !contentType.includes('application/json')) {
        // Not JSON, probably redirected to login
        throw new Error('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë√°nh gi√°');
      }

      const data = await response.json();

      if (response.status === 401) {
        // Unauthorized - need login
        throw new Error(data.message || 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë√°nh gi√°');
      }

      if (data.success) {
        // Show success message
        form.style.display = 'none';
        successMessage.style.display = 'block';
      } else {
        throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
      }
    } catch (error) {
      console.error('Submit error:', error);
      
      // If it's a login error, offer to redirect
      if (error.message.includes('ƒëƒÉng nh·∫≠p')) {
        const shouldRedirect = confirm(error.message + '\n\nB·∫°n c√≥ mu·ªën ƒë·∫øn trang ƒëƒÉng nh·∫≠p kh√¥ng?');
        if (shouldRedirect) {
          window.location.href = '/auth/login?redirect=' + encodeURIComponent(window.location.pathname);
          return;
        }
      } else {
        alert(error.message || 'C√≥ l·ªói x·∫£y ra khi g·ª≠i ƒë√°nh gi√°. Vui l√≤ng th·ª≠ l·∫°i.');
      }
      
      // Reset loading state
      btnSubmit.disabled = false;
      btnSubmit.querySelector('.btn-text').style.display = 'inline';
      btnSubmit.querySelector('.btn-loading').style.display = 'none';
    }
  });
})();
</script>

