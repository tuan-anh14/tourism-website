<%
// =================================================================
// REVIEWS SECTION COMPONENT - Hệ thống đánh giá mới
// =================================================================
// Props:
// - targetType: 'attraction', 'accommodation', 'food', 'entertainment', 'tour', 'cuisine-place'
// - targetId: ID của đối tượng
// - title: Tiêu đề section (optional)
// - showForm: Hiển thị form đánh giá (default: true)
// =================================================================

const _title = (typeof title !== 'undefined' && title) 
  ? title 
  : "Đánh giá từ khách hàng";
const _targetType = targetType || 'attraction';
const _targetId = targetId || '';
const _showForm = (typeof showForm === 'undefined') ? true : showForm;
const _currentUser = typeof user !== 'undefined' ? user : null;
%>

<div class="reviews-section" data-target-type="<%= _targetType %>" data-target-id="<%= _targetId %>">
  
  <!-- =================================================================
       HEADER
       ================================================================= -->
  <div class="reviews-header">
    <h2 class="reviews-title">Khách hàng đánh giá</h2>
    </div>
  
  <div class="reviews-stats-container" id="reviewsStats">
    <div class="stats-loading">
      <div class="spinner"></div>
      <p>Đang tải thống kê...</p>
        </div>
      </div>
      
  <!-- =================================================================
       REVIEW FORM - Chỉ hiển thị khi user đã đăng nhập
       ================================================================= -->
  <% if (_showForm) { %>
    <div class="review-form-container" id="reviewFormContainer">
      <% if (_currentUser) { %>
        <%- include('review-form', { 
          targetType: _targetType, 
          targetId: _targetId,
          user: _currentUser
        }) %>
              <% } else { %>
        <div class="review-login-prompt">
          <div class="login-prompt-icon">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
              <circle cx="12" cy="7" r="4"></circle>
            </svg>
          </div>
          <h3>Chia sẻ trải nghiệm của bạn</h3>
          <p>Đăng nhập để viết đánh giá và giúp mọi người có thêm thông tin hữu ích</p>
          <a href="/auth/login?redirect=<%= encodeURIComponent(typeof currentUrl !== 'undefined' ? currentUrl : '') %>" class="btn-primary">
            Đăng nhập để đánh giá
          </a>
        </div>
      <% } %>
    </div>
                <% } %>
                
  <!-- =================================================================
       REVIEWS LIST
       ================================================================= -->
  <div class="reviews-list-container" id="reviewsList">
    <div class="reviews-loading">
      <div class="spinner"></div>
      <p>Đang tải đánh giá...</p>
    </div>
  </div>
  
  <!-- =================================================================
       PAGINATION
       ================================================================= -->
  <div class="reviews-pagination" id="reviewsPagination"></div>

</div>

<!-- =================================================================
     IMAGE PREVIEW MODAL
     ================================================================= -->
<div class="image-modal" id="imageModal" style="display: none;">
  <div class="image-modal-overlay" onclick="closeImageModal()"></div>
  <div class="image-modal-content">
    <button class="image-modal-close" onclick="closeImageModal()">&times;</button>
    <button class="image-modal-prev" onclick="prevImage()" id="prevBtn">‹</button>
    <button class="image-modal-next" onclick="nextImage()" id="nextBtn">›</button>
    <img id="modalImage" src="" alt="Preview">
    <div class="image-modal-counter" id="imageCounter"></div>
  </div>
</div>

<!-- =================================================================
     STYLES
     ================================================================= -->
  <style>
/* ==========================
   CONTAINER & LAYOUT
   ========================== */
.reviews-section {
  background: #ffffff;
  border-radius: 16px;
  padding: 32px 28px;
  margin: 32px auto;
  max-width: 100%;
  width: 100%;
  box-sizing: border-box;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.06);
  border: 1px solid #e5e7eb;
  overflow: hidden;
}

/* ==========================
   HEADER
   ========================== */
.reviews-section .reviews-header {
  margin-bottom: 20px;
}

.reviews-section .reviews-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: #1a1a1a;
  margin: 0;
}
  
/* ==========================
   STATS CONTAINER
   ========================== */
.reviews-section .reviews-stats-container {
  margin-bottom: 32px;
}

.reviews-section .review-stats-card {
  background: #ffffff;
  border-radius: 8px;
  padding: 20px;
  border: 1px solid #e5e7eb;
  margin-bottom: 24px;
}

.reviews-section .stats-title {
  font-size: 1rem;
  font-weight: 700;
  color: #1a1a1a;
  margin: 0 0 16px 0;
}

.reviews-section .stats-summary {
  display: flex;
  align-items: flex-start;
  gap: 32px;
  flex-wrap: wrap;
}

.reviews-section .average-rating {
  text-align: center;
  min-width: 120px;
}

.reviews-section .rating-number {
  font-size: 3rem;
  font-weight: 700;
  line-height: 1;
  margin-bottom: 8px;
  color: #1a1a1a;
}

.reviews-section .rating-stars {
  display: flex;
  gap: 2px;
  justify-content: center;
  margin-bottom: 6px;
}
  
.reviews-section .rating-stars .star { 
  font-size: 1.25rem;
  color: #fbbf24;
}

.reviews-section .rating-count {
  font-size: 0.8125rem;
  color: #6b7280;
}

.reviews-section .rating-distribution {
  flex: 1;
  min-width: 280px;
}

.reviews-section .distribution-row {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 6px;
}

.reviews-section .distribution-label {
  font-size: 0.8125rem;
  font-weight: 400;
  min-width: 40px;
  display: flex;
  align-items: center;
  gap: 2px;
  color: #6b7280;
}

.reviews-section .distribution-label .star {
  color: #fbbf24;
  font-size: 0.875rem;
}

.reviews-section .distribution-bar {
  flex: 1;
  height: 6px;
  background: #e5e7eb;
  border-radius: 3px;
  overflow: hidden;
}
  
.reviews-section .distribution-fill {
  height: 100%;
  background: #fbbf24;
  border-radius: 3px;
  transition: width 0.6s ease;
}

.reviews-section .distribution-count {
  font-size: 0.8125rem;
  font-weight: 400;
  min-width: 30px;
  text-align: right;
  color: #6b7280;
}

/* ==========================
   LOGIN PROMPT
   ========================== */
.reviews-section .review-login-prompt {
  text-align: center;
  padding: 48px 24px;
  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
  border-radius: 12px;
  margin-bottom: 32px;
}

.reviews-section .login-prompt-icon {
  color: #6366f1;
  margin-bottom: 16px;
}

.reviews-section .review-login-prompt h3 {
  font-size: 1.375rem;
  font-weight: 700;
  color: #111827;
  margin-bottom: 8px;
}

.reviews-section .review-login-prompt p {
  font-size: 0.9375rem;
  color: #6b7280;
  margin-bottom: 20px;
}

.reviews-section .btn-primary {
  display: inline-block;
  background: #6366f1;
  color: #ffffff;
  padding: 12px 32px;
  border-radius: 8px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s;
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.reviews-section .btn-primary:hover {
  background: #4f46e5;
  transform: translateY(-2px); 
  box-shadow: 0 6px 16px rgba(99, 102, 241, 0.4);
}

/* ==========================
   REVIEWS LIST
   ========================== */
.reviews-section .reviews-list-container {
  margin-top: 32px;
}

.reviews-section .review-item {
  background: #ffffff !important;
  border-bottom: 1px solid #e5e7eb !important;
  border-left: none !important;
  border-radius: 0 !important;
  padding: 28px 0 !important;
  margin-bottom: 0 !important;
  display: block !important;
  grid-template-columns: initial !important;
  max-width: 100% !important;
  box-sizing: border-box !important;
  overflow-wrap: break-word !important;
}

.reviews-section .review-item:last-child {
  border-bottom: none !important;
}

.reviews-section .review-header {
  display: flex !important;
  align-items: flex-start !important;
  gap: 14px !important;
  margin-bottom: 0 !important;
  justify-content: flex-start !important;
  flex-direction: row !important;
}
  
.reviews-section .reviewer-avatar {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  object-fit: cover;
  flex-shrink: 0;
}
  
.reviews-section .reviewer-avatar-placeholder { 
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ffffff;
  font-size: 1.25rem;
  font-weight: 700;
  flex-shrink: 0;
  box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
}

.reviews-section .reviewer-info {
  flex: 1 !important;
  display: flex !important;
  flex-direction: column !important;
  gap: 12px !important;
}

.reviews-section .reviewer-name { 
  font-size: 1rem !important;
  font-weight: 700 !important;
  color: #1a1a1a !important;
  margin: 0 !important;
  padding-bottom: 4px !important;
  display: flex !important; 
  align-items: center !important; 
  gap: 8px !important;
  font-family: var(--ff-primary) !important;
  line-height: 1.3 !important;
  word-break: break-word !important;
  overflow-wrap: break-word !important;
  max-width: 100% !important;
}

.reviews-section .verified-badge {
  background: #10b981;
  color: #ffffff;
  font-size: 0.625rem;
  padding: 2px 6px;
  border-radius: 10px;
  font-weight: 600;
}

.reviews-section .review-meta {
  display: flex !important;
  flex-direction: column !important;
  gap: 8px !important;
  justify-content: flex-start !important;
  align-items: flex-start !important;
}

.reviews-section .review-rating { 
  display: flex !important;
  gap: 4px !important;
  align-items: center !important;
  flex-wrap: nowrap !important;
  flex-direction: row !important;
  margin-bottom: 2px !important;
}

.reviews-section .review-rating .star {
  font-size: 1.125rem !important;
  color: #fbbf24 !important;
  flex-shrink: 0 !important;
  line-height: 1 !important;
}

.reviews-section .review-date {
  color: #6b7280 !important;
  font-size: 0.875rem !important;
  font-family: var(--ff-primary) !important;
  display: block !important;
  padding-top: 2px !important;
}

.reviews-section .review-title {
  font-size: 0.9375rem;
  font-weight: 600;
  color: #1a1a1a;
  margin-bottom: 8px;
  font-family: var(--ff-heading);
}

.reviews-section .review-content-wrapper {
  margin-left: 0 !important;
  margin-top: 20px !important;
  padding-left: 0 !important;
  padding-top: 4px !important;
}

.reviews-section .review-content {
  font-size: 0.9375rem !important;
  line-height: 1.7 !important; 
  color: #374151 !important;
  margin-bottom: 18px !important;
  margin-top: 0 !important;
  font-family: var(--ff-primary) !important;
  word-break: break-word !important;
  text-align: left !important;
}

.reviews-section .review-images {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  margin-top: 18px;
  margin-bottom: 0;
}

.reviews-section .review-image {
  width: 90px;
  height: 90px;
  object-fit: cover;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 2px solid #e5e7eb;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
}

.reviews-section .review-image:hover {
  transform: scale(1.05);
  border-color: #3b82f6;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
}


/* ==========================
   PAGINATION
   ========================== */
.reviews-section .reviews-pagination {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 32px;
}

.reviews-section .page-btn {
  padding: 8px 14px;
  border: 1px solid #e5e7eb;
  background: #ffffff;
  color: #374151;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  transition: all 0.3s;
}

.reviews-section .page-btn:hover:not(:disabled) {
  background: #f3f4f6;
  border-color: #d1d5db;
}

.reviews-section .page-btn.active {
  background: #6366f1;
  color: #ffffff;
  border-color: #6366f1;
}

.reviews-section .page-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* ==========================
   LOADING STATES
   ========================== */
.reviews-section .stats-loading,
.reviews-section .reviews-loading {
  text-align: center;
  padding: 48px 24px;
}

.reviews-section .spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #f3f4f6;
  border-top-color: #6366f1;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto 16px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.reviews-section .stats-loading p,
.reviews-section .reviews-loading p {
  color: #6b7280;
  font-size: 0.875rem;
}

.reviews-section .no-reviews {
  text-align: center;
  padding: 64px 24px;
  color: #6b7280;
}

.reviews-section .no-reviews-icon {
  font-size: 4rem;
  margin-bottom: 16px;
  opacity: 0.3;
}

.reviews-section .no-reviews h3 {
  font-size: 1.25rem;
  color: #374151;
  margin-bottom: 8px;
}

/* ==========================
   RESPONSIVE
   ========================== */
@media (max-width: 768px) {
  .reviews-section {
    padding: 20px 16px !important;
    margin: 20px auto !important;
    border-radius: 12px !important;
  }

  .reviews-section .reviews-title {
    font-size: 1.125rem;
  }

  .reviews-section .review-item {
    padding: 24px 0;
  }

  .reviews-section .review-header {
    gap: 12px;
    margin-bottom: 0;
  }

  .reviews-section .reviewer-info {
    gap: 10px;
  }

  .reviews-section .reviewer-avatar,
  .reviews-section .reviewer-avatar-placeholder {
    width: 46px;
    height: 46px;
    font-size: 1.125rem;
  }

  .reviews-section .reviewer-name {
    font-size: 0.9375rem;
    padding-bottom: 2px;
  }

  .reviews-section .review-meta {
    gap: 6px;
  }

  .reviews-section .review-rating {
    margin-bottom: 1px;
  }

  .reviews-section .review-rating .star {
    font-size: 1rem;
    gap: 3px;
  }

  .reviews-section .review-date {
    font-size: 0.8125rem;
    padding-top: 1px;
  }

  .reviews-section .review-content-wrapper {
    margin-top: 16px;
    padding-top: 2px;
  }

  .reviews-section .review-content {
    font-size: 0.875rem;
    line-height: 1.65;
    margin-bottom: 14px;
  }

  .reviews-section .review-title {
    font-size: 0.875rem;
    margin-bottom: 6px;
  }

  .reviews-section .review-images {
    gap: 8px;
    margin-top: 12px;
  }

  .reviews-section .review-image {
    width: 85px;
    height: 85px;
  }
  
  .reviews-section .review-stats-card {
    padding: 16px;
  }

  .reviews-section .stats-title {
    font-size: 0.9375rem;
  }

  .reviews-section .stats-summary {
    flex-direction: column;
    gap: 24px;
  }

  .reviews-section .average-rating {
    min-width: auto;
  }

  .reviews-section .rating-number {
    font-size: 3rem;
  }

  .reviews-section .rating-distribution {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .reviews-section {
    padding: 16px 12px !important;
    margin: 16px auto !important;
    border-radius: 8px !important;
  }

  .reviews-section .review-item {
    padding: 20px 0;
  }

  .reviews-section .review-header {
    gap: 10px;
    margin-bottom: 0;
  }

  .reviews-section .reviewer-info {
    gap: 8px;
  }

  .reviews-section .reviewer-avatar,
  .reviews-section .reviewer-avatar-placeholder {
    width: 42px;
    height: 42px;
    font-size: 1rem;
  }

  .reviews-section .reviewer-name {
    font-size: 0.875rem;
    padding-bottom: 1px;
  }

  .reviews-section .review-meta {
    gap: 5px;
  }

  .reviews-section .review-rating {
    margin-bottom: 1px;
  }

  .reviews-section .review-rating .star {
    font-size: 0.9375rem;
    gap: 2px;
  }

  .reviews-section .review-date {
    font-size: 0.75rem;
    padding-top: 1px;
  }

  .reviews-section .review-content-wrapper {
    margin-top: 14px;
    padding-top: 2px;
  }

  .reviews-section .review-content {
    font-size: 0.8125rem;
    line-height: 1.6;
    margin-bottom: 12px;
  }

  .reviews-section .review-title {
    font-size: 0.8125rem;
    margin-bottom: 5px;
  }

  .reviews-section .review-images {
    gap: 8px;
    margin-top: 10px;
  }

  .reviews-section .review-image {
    width: 75px;
    height: 75px;
  }

  .reviews-section .stats-summary {
    gap: 20px;
  }
}

@media (max-width: 375px) {
  .reviews-section {
    padding: 14px 10px !important;
    margin: 12px auto !important;
  }

  .reviews-section .review-item {
    padding: 16px 0 !important;
  }

  .reviews-section .reviewer-name {
    font-size: 0.8125rem !important;
  }

  .reviews-section .review-content {
    font-size: 0.8125rem !important;
  }
}

@media (max-width: 320px) {
  .reviews-section {
    padding: 12px 8px !important;
    margin: 10px auto !important;
  }

  .reviews-section .review-item {
    padding: 14px 0 !important;
  }
}

/* ==========================
   IMAGE PREVIEW MODAL
   ========================== */
.image-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
}

.image-modal-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(5px);
}

.image-modal-content {
  position: relative;
  max-width: 90%;
  max-height: 90vh;
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.image-modal-content img {
  max-width: 100%;
  max-height: 90vh;
  object-fit: contain;
  border-radius: 8px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
  animation: zoomIn 0.3s ease;
}

@keyframes zoomIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

.image-modal-close {
  position: absolute;
  top: -50px;
  right: 0;
  background: rgba(255, 255, 255, 0.1);
  color: #ffffff;
  border: 2px solid rgba(255, 255, 255, 0.3);
  width: 45px;
  height: 45px;
  border-radius: 50%;
  font-size: 2rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s;
  line-height: 1;
  padding: 0;
  backdrop-filter: blur(10px);
}

.image-modal-close:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
  transform: rotate(90deg);
}

.image-modal-prev,
.image-modal-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.1);
  color: #ffffff;
  border: 2px solid rgba(255, 255, 255, 0.3);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  font-size: 2rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s;
  line-height: 1;
  padding: 0;
  backdrop-filter: blur(10px);
}

.image-modal-prev {
  left: -70px;
}

.image-modal-next {
  right: -70px;
}

.image-modal-prev:hover,
.image-modal-next:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-50%) scale(1.1);
}

.image-modal-prev:disabled,
.image-modal-next:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

.image-modal-prev:disabled:hover,
.image-modal-next:disabled:hover {
  transform: translateY(-50%) scale(1);
  background: rgba(255, 255, 255, 0.1);
}

.image-modal-counter {
  position: absolute;
  bottom: -40px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(255, 255, 255, 0.1);
  color: #ffffff;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.875rem;
  font-weight: 500;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Responsive Modal */
@media (max-width: 768px) {
  .image-modal-content {
    max-width: 95%;
    max-height: 85vh;
  }

  .image-modal-prev {
    left: 10px;
    width: 40px;
    height: 40px;
    font-size: 1.5rem;
  }

  .image-modal-next {
    right: 10px;
    width: 40px;
    height: 40px;
    font-size: 1.5rem;
  }

  .image-modal-close {
    top: 10px;
    right: 10px;
    width: 40px;
    height: 40px;
    font-size: 1.5rem;
  }

  .image-modal-counter {
    bottom: 10px;
    font-size: 0.75rem;
    padding: 6px 12px;
  }
}
</style>

<!-- =================================================================
     SCRIPT
     ================================================================= -->
<script>
(function() {
  const reviewsSection = document.querySelector('.reviews-section');
  if (!reviewsSection) return;

  const targetType = reviewsSection.dataset.targetType;
  const targetId = reviewsSection.dataset.targetId;
  let currentPage = 1;

  // =================================================================
  // LOAD STATS
  // =================================================================
  async function loadStats() {
    try {
      const response = await fetch(`/api/reviews/${targetType}/${targetId}?page=1&limit=1`);
      const data = await response.json();

      if (data.success && data.data.stats) {
        renderStats(data.data.stats);
      }
    } catch (error) {
      console.error('Error loading stats:', error);
      document.getElementById('reviewsStats').innerHTML = `
        <div class="no-reviews">
          <p>Không thể tải thống kê</p>
        </div>
      `;
    }
  }

  // =================================================================
  // RENDER STATS
  // =================================================================
  function renderStats(stats) {
    const total = stats.totalReviews;
    const avg = stats.averageRating || 0;
    const dist = stats.ratingDistribution || {};

    const fullStars = Math.floor(avg);
    const hasHalf = (avg % 1) >= 0.5;
    
    let starsHtml = '';
    for (let i = 0; i < 5; i++) {
      if (i < fullStars) {
        starsHtml += '<span class="star">★</span>';
      } else if (i === fullStars && hasHalf) {
        starsHtml += '<span class="star">★</span>';
      } else {
        starsHtml += '<span class="star" style="color: rgba(255,255,255,0.3)">★</span>';
      }
    }

    let distributionHtml = '';
    for (let i = 5; i >= 1; i--) {
      const count = dist[i] || 0;
      const percent = total > 0 ? (count / total * 100) : 0;
      distributionHtml += `
        <div class="distribution-row">
          <div class="distribution-label">
            <span>${i}</span>
            <span class="star">★</span>
          </div>
          <div class="distribution-bar">
            <div class="distribution-fill" style="width: ${percent}%"></div>
          </div>
          <div class="distribution-count">${count}</div>
        </div>
      `;
    }

    document.getElementById('reviewsStats').innerHTML = `
      <div class="review-stats-card">
        <h3 class="stats-title">Tổng quan</h3>
        <div class="stats-summary">
          <div class="average-rating">
            <div class="rating-number">${avg.toFixed(1)}</div>
            <div class="rating-stars">${starsHtml}</div>
            <div class="rating-count">(${total} đánh giá)</div>
          </div>
          <div class="rating-distribution">
            ${distributionHtml}
          </div>
        </div>
      </div>
    `;
  }

  // =================================================================
  // LOAD REVIEWS
  // =================================================================
  async function loadReviews(page = 1) {
    currentPage = page;
    const container = document.getElementById('reviewsList');
    
    container.innerHTML = `
      <div class="reviews-loading">
        <div class="spinner"></div>
        <p>Đang tải đánh giá...</p>
      </div>
    `;

    try {
      const response = await fetch(`/api/reviews/${targetType}/${targetId}?page=${page}&limit=10`);
      const data = await response.json();

      if (data.success) {
        renderReviews(data.data.reviews);
        renderPagination(data.data.pagination);
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error('Error loading reviews:', error);
      container.innerHTML = `
        <div class="no-reviews">
          <div class="no-reviews-icon">📝</div>
          <h3>Chưa có đánh giá nào</h3>
        </div>
      `;
    }
  }

  // =================================================================
  // RENDER REVIEWS
  // =================================================================
  function renderReviews(reviews) {
    const container = document.getElementById('reviewsList');
    
    if (!reviews || reviews.length === 0) {
      container.innerHTML = `
        <div class="no-reviews">
          <div class="no-reviews-icon">📝</div>
          <h3>Chưa có đánh giá nào</h3>
        </div>
      `;
      return;
    }

    container.innerHTML = reviews.map(review => {
      // Generate stars HTML (always 5 stars)
      let starsHtml = '';
      for (let i = 1; i <= 5; i++) {
        starsHtml += `<span class="star" style="color: ${i <= review.rating ? '#fbbf24' : '#e5e7eb'}">★</span>`;
      }
      
      const dateObj = new Date(review.createdAt);
      const date = dateObj.toLocaleDateString('vi-VN');
      const time = dateObj.toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
      
      const avatarHtml = review.user.avatar 
        ? `<img src="${review.user.avatar}" alt="${review.user.name}" class="reviewer-avatar">`
        : `<div class="reviewer-avatar-placeholder">${review.user.name.charAt(0).toUpperCase()}</div>`;
      
      const imagesHtml = review.images && review.images.length > 0
        ? `<div class="review-images" data-images='${JSON.stringify(review.images)}'>
            ${review.images.map((img, idx) => `<img src="${img}" alt="Review image" class="review-image" onclick="openImageModal(${idx}, this.parentElement)">`).join('')}
           </div>`
        : '';

      const verifiedBadge = review.verified 
        ? '<span class="verified-badge">✓ Đã xác minh</span>'
        : '';

      return `
        <div class="review-item" data-review-id="${review._id}">
          <div class="review-header">
            ${avatarHtml}
            <div class="reviewer-info">
              <div class="reviewer-name">
                ${review.user.name}
                ${verifiedBadge}
              </div>
              <div class="review-meta">
                <div class="review-rating">${starsHtml}</div>
                <div class="review-date">${date} • ${time}</div>
              </div>
            </div>
          </div>
          <div class="review-content-wrapper">
            ${review.title ? `<h4 class="review-title">${review.title}</h4>` : ''}
            <div class="review-content">${review.content}</div>
            ${imagesHtml}
          </div>
        </div>
      `;
    }).join('');
  }

  // =================================================================
  // RENDER PAGINATION
  // =================================================================
  function renderPagination(pagination) {
    const container = document.getElementById('reviewsPagination');
    
    if (pagination.totalPages <= 1) {
      container.innerHTML = '';
      return;
    }

    let html = '';
    
    // Previous button
    html += `<button class="page-btn" ${!pagination.hasPrev ? 'disabled' : ''} 
              onclick="loadReviewsPage(${currentPage - 1})">‹</button>`;
    
    // Page numbers
    for (let i = 1; i <= pagination.totalPages; i++) {
      if (
        i === 1 || 
        i === pagination.totalPages || 
        (i >= currentPage - 1 && i <= currentPage + 1)
      ) {
        html += `<button class="page-btn ${i === currentPage ? 'active' : ''}" 
                  onclick="loadReviewsPage(${i})">${i}</button>`;
      } else if (i === currentPage - 2 || i === currentPage + 2) {
        html += '<span style="padding: 8px;">...</span>';
      }
    }
    
    // Next button
    html += `<button class="page-btn" ${!pagination.hasNext ? 'disabled' : ''} 
              onclick="loadReviewsPage(${currentPage + 1})">›</button>`;
    
    container.innerHTML = html;
  }

  // =================================================================
  // IMAGE MODAL FUNCTIONS
  // =================================================================
  let currentImages = [];
  let currentImageIndex = 0;

  window.openImageModal = function(index, imagesContainer) {
    const imagesData = imagesContainer.getAttribute('data-images');
    currentImages = JSON.parse(imagesData);
    currentImageIndex = index;
    
    const modal = document.getElementById('imageModal');
    const modalImage = document.getElementById('modalImage');
    const counter = document.getElementById('imageCounter');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    
    modalImage.src = currentImages[currentImageIndex];
    counter.textContent = `${currentImageIndex + 1} / ${currentImages.length}`;
    
    // Show/hide navigation buttons
    prevBtn.disabled = currentImageIndex === 0;
    nextBtn.disabled = currentImageIndex === currentImages.length - 1;
    
    // Hide navigation if only 1 image
    if (currentImages.length === 1) {
      prevBtn.style.display = 'none';
      nextBtn.style.display = 'none';
      counter.style.display = 'none';
    } else {
      prevBtn.style.display = 'flex';
      nextBtn.style.display = 'flex';
      counter.style.display = 'block';
    }
    
    modal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
  };

  window.closeImageModal = function() {
    const modal = document.getElementById('imageModal');
    modal.style.display = 'none';
    document.body.style.overflow = '';
    currentImages = [];
    currentImageIndex = 0;
  };

  window.nextImage = function() {
    if (currentImageIndex < currentImages.length - 1) {
      currentImageIndex++;
      updateModalImage();
    }
  };

  window.prevImage = function() {
    if (currentImageIndex > 0) {
      currentImageIndex--;
      updateModalImage();
    }
  };

  function updateModalImage() {
    const modalImage = document.getElementById('modalImage');
    const counter = document.getElementById('imageCounter');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    
    modalImage.src = currentImages[currentImageIndex];
    counter.textContent = `${currentImageIndex + 1} / ${currentImages.length}`;
    
    prevBtn.disabled = currentImageIndex === 0;
    nextBtn.disabled = currentImageIndex === currentImages.length - 1;
  }

  // Keyboard navigation
  document.addEventListener('keydown', function(e) {
    const modal = document.getElementById('imageModal');
    if (modal.style.display === 'flex') {
      if (e.key === 'Escape') {
        closeImageModal();
      } else if (e.key === 'ArrowLeft') {
        prevImage();
      } else if (e.key === 'ArrowRight') {
        nextImage();
      }
    }
  });

  // =================================================================
  // GLOBAL FUNCTIONS
  // =================================================================
  window.loadReviewsPage = function(page) {
    loadReviews(page);
    reviewsSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
  };

  // =================================================================
  // INIT
  // =================================================================
  loadStats();
  loadReviews(1);
})();
  </script>
